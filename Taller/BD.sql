/* ---------------------------------------------------- */
/*  Generated by Enterprise Architect Version 17.1 		*/
/*  Created On : 04-ago.-2025 5:39:04 a. m. 				*/
/*  DBMS       : PostgreSQL 						*/
/* ---------------------------------------------------- */

/* Drop Tables */

DROP TABLE IF EXISTS articulo CASCADE
;

DROP TABLE IF EXISTS cliente CASCADE
;

DROP TABLE IF EXISTS cliente_pedido CASCADE
;

DROP TABLE IF EXISTS pedido CASCADE
;

DROP TABLE IF EXISTS pedido_articulo CASCADE
;

DROP TABLE IF EXISTS proveedor CASCADE
;

DROP TABLE IF EXISTS proveedor_articulo CASCADE
;

/* Create Tables */

CREATE TABLE articulo
(
	k_id_articulo varchar(10) NOT NULL,
	n_nombre_articulo varchar(50) NOT NULL,
	t_descripcion varchar(50) NOT NULL,
	v_precio integer NOT NULL
)
;

CREATE TABLE cliente
(
	k_cod_cliente varchar(10) NOT NULL,
	n_nombre_cliente varchar(50) NOT NULL,
	dir_calle varchar(5) NOT NULL,
	dir_carrera varchar(5) NOT NULL,
	dir_numero varchar(5) NOT NULL,
	v_saldo integer NULL   DEFAULT 0,
	v_limite_credito integer NULL,
	v_porcentaje_de_descuento numeric NULL,
	cre_usuario_cliente varchar(50) NOT NULL,
	cre_contrasena_cliente varchar(50) NOT NULL
)
;

CREATE TABLE cliente_pedido
(
	k_cod_cliente varchar(10) NULL,
	k_id_pedido varchar(10) NULL
)
;

CREATE TABLE pedido
(
	k_id_pedido varchar(10) NOT NULL,
	f_fecha_pedido date NOT NULL,
	k_cod_cliente varchar(10) NULL,
	b_pagado boolean NOT NULL   DEFAULT false
)
;

CREATE TABLE pedido_articulo
(
	i_cantidad_ordenada integer NOT NULL,
	i_cantidad_pendiente integer NOT NULL,
	k_id_articulo varchar(10) NULL,
	k_id_pedido varchar(10) NULL
)
;

CREATE TABLE proveedor
(
	k_id_proveedor varchar(10) NOT NULL,
	n_nombre varchar(50) NOT NULL,
	cre_usuario_proveedor varchar(50) NOT NULL,
	cre_contrasena_proveedor varchar(50) NULL
)
;

CREATE TABLE proveedor_articulo
(
	i_stock_minimo integer NOT NULL,
	i_stock integer NOT NULL,
	k_id_articulo varchar(10) NULL,
	k_id_proveedor varchar(10) NULL
)
;

/* Create Primary Keys, Indexes, Uniques, Checks */

ALTER TABLE articulo ADD CONSTRAINT "PK_Table1"
	PRIMARY KEY (k_id_articulo)
;

ALTER TABLE cliente ADD CONSTRAINT "PK_cliente"
	PRIMARY KEY (k_cod_cliente)
;

ALTER TABLE cliente 
  ADD CONSTRAINT "UNQusu_cli" UNIQUE (cre_usuario_cliente)
;

CREATE INDEX "IXFK_cliente_pedido_cliente" ON cliente_pedido (k_cod_cliente ASC)
;

CREATE INDEX "IXFK_cliente_pedido_pedido" ON cliente_pedido (k_id_pedido ASC)
;

ALTER TABLE pedido ADD CONSTRAINT "PK_pedido"
	PRIMARY KEY (k_id_pedido)
;

CREATE INDEX "IXFK_pedido_cliente" ON pedido (k_cod_cliente ASC)
;

CREATE INDEX "IXFK_pedido_articulo_articulo" ON pedido_articulo (k_id_articulo ASC)
;

CREATE INDEX "IXFK_pedido_articulo_pedido" ON pedido_articulo (k_id_pedido ASC)
;

ALTER TABLE proveedor ADD CONSTRAINT "PK_proveedor"
	PRIMARY KEY (k_id_proveedor)
;

ALTER TABLE proveedor 
  ADD CONSTRAINT "UNQusu_pro" UNIQUE (cre_usuario_proveedor)
;

CREATE INDEX "IXFK_proveedor_articulo_articulo" ON proveedor_articulo (k_id_articulo ASC)
;

CREATE INDEX "IXFK_proveedor_articulo_proveedor" ON proveedor_articulo (k_id_proveedor ASC)
;

/* Create Foreign Key Constraints */

ALTER TABLE cliente_pedido ADD CONSTRAINT "FK_cliente_pedido_cliente"
	FOREIGN KEY (k_cod_cliente) REFERENCES cliente (k_cod_cliente) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE cliente_pedido ADD CONSTRAINT "FK_cliente_pedido_pedido"
	FOREIGN KEY (k_id_pedido) REFERENCES pedido (k_id_pedido) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE pedido ADD CONSTRAINT "FK_pedido_cliente"
	FOREIGN KEY (k_cod_cliente) REFERENCES cliente (k_cod_cliente) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE pedido_articulo ADD CONSTRAINT "FK_pedido_articulo_articulo"
	FOREIGN KEY (k_id_articulo) REFERENCES articulo (k_id_articulo) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE pedido_articulo ADD CONSTRAINT "FK_pedido_articulo_pedido"
	FOREIGN KEY (k_id_pedido) REFERENCES pedido (k_id_pedido) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE proveedor_articulo ADD CONSTRAINT "FK_proveedor_articulo_articulo"
	FOREIGN KEY (k_id_articulo) REFERENCES articulo (k_id_articulo) ON DELETE No Action ON UPDATE No Action
;

ALTER TABLE proveedor_articulo ADD CONSTRAINT "FK_proveedor_articulo_proveedor"
	FOREIGN KEY (k_id_proveedor) REFERENCES proveedor (k_id_proveedor) ON DELETE No Action ON UPDATE No Action
;
